# Generated by Django 3.2.14 on 2023-12-27 11:35

from django.db import migrations, models
import django.db.models.deletion


def copy_event_games_to_new_m2m_through_model(apps, schema_editor):
    Event = apps.get_model("core", "Event")
    EventGame = apps.get_model("core", "EventGame")
    Vote = apps.get_model("core", "Vote")

    for event in Event.objects.filter(games__isnull=False):
        games = event.games.all()

        for game in games:
            event_game, created = EventGame.objects.get_or_create(event=event, game=game)
            if not created:
                continue

            # Assume the first voter is also the one who added the game.
            first_vote = Vote.objects.filter(
                game=game, event=event).order_by("-created_at").first()
            if first_vote:
                event_game.added_by_username = first_vote.username
                event_game.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_comment_softdeleted'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('added_by_username', models.CharField(blank=True, default='', max_length=256)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='games2',
            field=models.ManyToManyField(blank=True, related_name='games2', through='core.EventGame', to='core.Game'),
        ),
        migrations.RunPython(
            copy_event_games_to_new_m2m_through_model, migrations.RunPython.noop
        ),
        # Remove old field
        migrations.RemoveField(model_name="event", name="games"),
        # Rename new field
        migrations.RenameField(
            model_name="event", old_name="games2", new_name="games"
        ),
        # Use original related name
        migrations.AlterField(
            model_name="event",
            name="games",
            field=models.ManyToManyField(
                blank=True,
                related_name="games",
                through="core.EventGame",
                to="core.Game",
            ),
        ),
    ]
